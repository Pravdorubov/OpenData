@using OpenData.Domain.Entities;
@model OpenData.Domain.Entities.OpenDataSet

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>CreatePass</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.8.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    
    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
    
        <fieldset>
            <legend>PassportModel</legend>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.FullDescription)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.FullDescription)
                @Html.ValidationMessageFor(model => model.FullDescription)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.AuthorityID)
            </div>
            <div class="editor-field">
                 @Html.DropDownList("AuthorityID", String.Empty)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.CategoryID)
            </div>
            <div class="editor-field">
                 @Html.DropDownList("CategoryID", String.Empty)
            </div>
    
            <div class="editor-label">
                @Html.LabelFor(model => model.UserID)
            </div>
            <div class="editor-field">
                @Html.DropDownList("UserID", String.Empty)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Periodicity)
            </div>
            <div class="editor-field">
                @Html.DropDownList("Periodicity", new SelectList(new [] {""}.Concat(Enum.GetNames(typeof(Periodicity)))))
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.KeyWords)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.KeyWords)
                @Html.ValidationMessageFor(model => model.KeyWords)
            </div>
    
            <p>
                <input type="submit" value="Create" />
            </p>
        </fieldset>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
